plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group
version = "${project.mod_version}-${project.minecraft_version}"
String jarpath = "${project.buildDir}/libs/${project.archivesBaseName}-${project.version}"

// Shadow stuff
configurations {
    dev
    compile.extendsFrom shade
    modCompile.extendsFrom modShade
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url 'http://server.bbkr.space:8081/artifactory/libs-release' }
	maven { url 'https://repo.spongepowered.org/maven' }
	maven {
		name = 'sonatype-oss'
		url = 'https://oss.sonatype.org/content/repositories/snapshots/'
	}
	maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
	implementation "net.luckperms:api:${project.luckperms_version}"

	compile "net.kyori:adventure-text-minimessage:${project.kyori_adventure_minimessage_version}"
	shadow "net.kyori:adventure-text-minimessage:${project.kyori_adventure_minimessage_version}"
	include "net.kyori:adventure-text-minimessage:${project.kyori_adventure_minimessage_version}"

	compile "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_serializer_version}"
	shadow "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_serializer_version}"
	include "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_serializer_version}"
}

// Tasks
shadowJar {
    enabled = true
    // Only shadow implementation/modImplementation
    configurations = [project.configurations.shade]
    classifier = "dev"
}

task remapShadowJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
    afterEvaluate {
        input = file("${jarpath}-dev.jar")
        archiveName = "${project.name}-${project.version}.jar"
        addNestedDependencies = true
        remapAccessWidener = true
    }
}


processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

build.dependsOn(shadowJar, remapShadowJar)


// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {}
}
