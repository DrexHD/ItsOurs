plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group
version = "${project.mod_version}-${project.minecraft_version}"
String jarpath = "${project.buildDir}/libs/${project.archivesBaseName}-${project.version}"

// Shadow stuff
configurations {
    dev
    compile.extendsFrom shade
    modCompile.extendsFrom modShade
}

repositories {
    maven {
        name = 'sonatype-oss'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
	flatDir {
		dirs 'libs'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

	implementation "net.luckperms:api:${project.luckperms_version}"
	shadow "net.luckperms:api:${project.luckperms_version}"
	include "net.luckperms:api:${project.luckperms_version}"

	modImplementation include(":adventure-platform-fabric:4.1.0-SNAPSHOT")

	implementation "net.kyori:adventure-text-minimessage:${project.kyori_adventure_version_mini}"
	//shadow "net.kyori:adventure-text-minimessage:${project.kyori_adventure_version_mini}"
	include "net.kyori:adventure-text-minimessage:${project.kyori_adventure_version_mini}"
	implementation "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_version_seri}"
	//shadow "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_version_seri}"
	include "net.kyori:adventure-text-serializer-gson:${project.kyori_adventure_version_seri}"
}

// Tasks
shadowJar {
    enabled = true
    // Only shadow implementation/modImplementation
    configurations = [project.configurations.shade]
    classifier = "dev"
}

task remapShadowJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
    afterEvaluate {
        input = file("${jarpath}-dev.jar")
        archiveName = "${project.name}-${project.version}.jar"
        addNestedDependencies = true
        remapAccessWidener = true
    }
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}